
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      match /savedAds/{adId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    match /ads/{adId} {
      allow read: if resource.data.status == 'approved' || (request.auth != null && request.auth.uid == resource.data.userId);
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }
    
    match /config/{docId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    match /conversations/{conversationId} {
      allow read, update, write: if request.auth.uid in resource.data.participants;
      allow create: if request.auth.uid in request.resource.data.participants;
    }

    match /conversations/{conversationId}/messages/{messageId} {
      allow read, create: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
    }

    match /notifications/{notificationId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    match /issues/{issueId} {
      allow create;
      allow read, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
  }
}
