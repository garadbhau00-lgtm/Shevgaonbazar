rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    match /ads/{adId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
    }
    match /conversations/{conversationId} {
      allow read, create: if request.auth != null && request.auth.uid in resource.data.participants;
      match /messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }
    match /notifications/{notificationId} {
      function isOwner() {
        return request.auth != null && request.auth.uid == resource.data.userId;
      }

      function isAdmin() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      }

      allow read, update: if isOwner();
      allow delete: if isOwner() || isAdmin();
      allow create: if request.auth != null;
    }
  }
}