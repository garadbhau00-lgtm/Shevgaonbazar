rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isProfileOwner(userId) {
        return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    function isParticipant(conversationId) {
      return request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
    }


    // Collection Rules

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();

       // Saved Ads Subcollection
      match /savedAds/{adId} {
        allow read, write, delete: if isOwner(userId);
      }
    }

    match /ads/{adId} {
      allow read: if resource.data.status == 'approved' || (isSignedIn() && resource.data.userId == request.auth.uid) || (isSignedIn() && isAdmin());
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
    }

    match /conversations/{conversationId} {
      allow read, update: if isSignedIn() && isParticipant(conversationId);
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participants;
      
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && isParticipant(conversationId);
        allow update, delete: if false; 
      }
    }

    match /notifications/{notificationId} {
        allow read, update, delete: if isSignedIn() && isOwner(resource.data.userId);
        allow create: if isSignedIn() && (isOwner(request.resource.data.userId) || isAdmin());
    }

    match /issues/{issueId} {
       allow create: if true;
       allow read, list, update, delete: if isSignedIn() && isAdmin();
    }
    
    match /config/advertisement {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
  }
}
