
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // USERS: 
    // All users can see each other's profiles to start chats.
    // Users can only create or update their own profile.
    match /users/{userId} {
      allow read;
      allow create, update: if isOwner(userId);
      allow delete: if isAdmin();
    }
    
    // CONFIG:
    // Only admins can change app-wide configuration
    match /config/{docId} {
      allow read;
      allow write: if isAdmin();
    }
    
    // ADS: 
    // Anyone can read approved ads.
    // Logged-in users can create ads.
    // Users can only update/delete their own ads.
    // Admins can update/delete any ad.
    match /ads/{adId} {
      allow read: if resource.data.status == 'approved' || (isAuth() && resource.data.userId == request.auth.uid);
      allow create: if isAuth();
      allow update: if isAuth() && (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isAuth() && (resource.data.userId == request.auth.uid || isAdmin());
    }

    // SAVED ADS:
    // Users can only read/write to their own savedAds subcollection.
    match /users/{userId}/savedAds/{adId} {
      allow read, write, delete: if isOwner(userId);
    }
    
    // CONVERSATIONS:
    // Users can list and read conversations they are a part of.
    // A user can create a conversation if they are a participant in it.
    match /conversations/{conversationId} {
      allow list, read: if isAuth() && request.auth.uid in resource.data.participants;
      allow create: if isAuth() && request.auth.uid in request.resource.data.participants;
      allow update: if isAuth() && request.auth.uid in resource.data.participants;
    
      // MESSAGES: Only participants in the conversation can read/write messages.
      match /messages/{messageId} {
        allow read, create: if isAuth() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }
    
    // NOTIFICATIONS: Users can only read/write to their own notifications subcollection.
    match /notifications/{notificationId} {
      allow read, write, delete: if isAuth() && (resource.data.userId == request.auth.uid || isAdmin());
    }
    
     // ISSUES:
     // Logged-in users can create issues.
     // Users can read their own issues, Admins can read all.
     // Admins can update any issue.
    match /issues/{issueId} {
      allow create: if isAuth();
      allow read: if isAuth() && (resource.data.userId == request.auth.uid || isAdmin());
      allow update: if isAdmin();
    }
  }
}
