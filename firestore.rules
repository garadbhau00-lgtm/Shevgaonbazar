rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an Admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own profile.
      allow create: if request.auth != null && request.auth.uid == userId;
      // Users can read and update their own profile. Admins can read any profile.
      allow read, update: if request.auth.uid == userId || isAdmin();
      // Only admins can delete a user profile.
      allow delete: if isAdmin();
    }
    
    // Rules for the 'ads' collection
    match /ads/{adId} {
      // Authenticated users can create ads.
      allow create: if request.auth != null;
      // Anyone can read approved ads. Users can read their own ads regardless of status.
      allow read: if resource.data.status == 'approved' || request.auth.uid == resource.data.userId;
      // Users can update their own ads if not approved. Admins can update any ad.
      allow update: if (request.auth.uid == resource.data.userId && resource.data.status != 'approved') || isAdmin();
      // Users can delete their own ads. Admins can delete any ad.
      allow delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
    
    // Rules for conversations and messages
    match /conversations/{conversationId} {
        allow read, write: if request.auth.uid in resource.data.participants;
        
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        }
    }
    
    // Rules for help messages
    match /help_messages/{messageId} {
      // Allow authenticated users to create help messages.
      allow create: if request.auth != null;
      // Allow admins to read, write, and delete any help message.
      allow read, write, delete: if isAdmin();
    }
  }
}
