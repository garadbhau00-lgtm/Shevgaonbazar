
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isProfileOwner() {
      return isOwner(resource.data.uid);
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // USERS
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isProfileOwner();
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();

      // SAVED ADS (Subcollection)
      match /savedAds/{adId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // ADS
    match /ads/{adId} {
      allow read: if resource.data.status == 'approved' || isOwner(resource.data.userId) || isAdmin();
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if isOwner(request.resource.data.userId) || isAdmin();
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // CONVERSATIONS
    match /conversations/{conversationId} {
      // Allow creation if the user is a participant
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participants;
      
      // Participants can read/update the conversation document (e.g. to update unread status)
      allow read, update: if isSignedIn() && request.auth.uid in resource.data.participants;

      // MESSAGES (Subcollection)
      match /messages/{messageId} {
        // Participants can list/read messages
        allow list, read: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        
        // Participants can create new messages
        allow create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }
    
    // NOTIFICATIONS
    match /notifications/{notificationId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isAdmin(); // Only admins can create notifications
    }

    // ISSUES
    match /issues/{issueId} {
      allow create: if isSignedIn();
      allow read, list, update: if isAdmin();
    }

    // CONFIG
    match /config/{configId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
