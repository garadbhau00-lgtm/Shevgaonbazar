
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Users Collection
    // - Anyone can create their own user profile (on signup).
    // - Users can only read/update their own profile.
    // - Admins can read/update any user profile.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isSignedIn();
    }

    // Config Collection (for advertisement)
    // - Only Admins can read or write.
    match /config/{docId} {
        allow read, write: if isAdmin();
    }

    // Ads Collection
    // - Anyone can read 'approved' ads.
    // - Users can create ads.
    // - Users can update/delete their own ads.
    // - Admins can read, update, or delete any ad.
    match /ads/{adId} {
      allow read: if resource.data.status == 'approved' || isOwner(resource.data.userId) || isAdmin();
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.userId) || isAdmin();
    }

    // Saved Ads Subcollection
    // - Users can only read/write to their own saved ads subcollection.
    match /users/{userId}/savedAds/{adId} {
      allow read, write, delete: if isOwner(userId);
    }
    
    // Conversations Collection
    // - Users can read conversations they are a participant in.
    // - Users can create a new conversation if their UID is in the 'participants' list.
    match /conversations/{conversationId} {
      allow read, update: if isSignedIn() && request.auth.uid in resource.data.participants;
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participants;
      
      // Messages Subcollection
      // - Users can read messages in conversations they are part of.
      // - Users can create messages in conversations they are part of.
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
      }
    }
    
    // Notifications Collection
    // - Users can only read/update/delete their own notifications.
    // - Admins can create notifications for any user.
    match /notifications/{notificationId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isAdmin() || isOwner(request.resource.data.userId); // Allow admin to create for others, user for self
    }

    // Issues Collection
    // - Any signed-in user can create an issue.
    // - Users can read their own issues.
    // - Admins can read/update any issue.
    match /issues/{issueId} {
        allow create: if isSignedIn();
        allow read: if isOwner(resource.data.userId) || isAdmin();
        allow update: if isAdmin();
    }
  }
}
