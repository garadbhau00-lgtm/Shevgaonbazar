
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isCreateConversationRequestValid(ad) {
      return request.resource.data.adId == ad.id &&
             request.resource.data.participants[0] == request.auth.uid &&
             request's resource.data.participants[1] == ad.data.userId &&
             request.resource.data.participants.size() == 2;
    }
    
    // Ads: Publicly readable, only owner can write
    match /ads/{adId} {
      allow read: if true;
      allow write: if isOwner(resource.data.userId);
    }
    
    // Users: Readable by any authenticated user, writable only by owner
    match /users/{userId} {
      allow read: if isAuth();
      allow write: if isOwner(userId);

      // Saved Ads: Writable only by owner
      match /savedAds/{adId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Config: Admin-only access
    match /config/{docId} {
      allow read: if true; // Ads on homepage need to be public
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Conversations & Messages
    match /conversations/{conversationId} {
      allow read, update, delete: if isAuth() && request.auth.uid in resource.data.participants;
      allow create: if isAuth() && isCreateConversationRequestValid(get(/databases/$(database)/documents/ads/$(request.resource.data.adId)));
      
      match /messages/{messageId} {
        allow read, create: if isAuth() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }

    // Notifications and Issues: Writable by authenticated users, readable only by owner or admin
    match /{collection}/{docId} {
      allow create: if isAuth();
      allow read, update, delete: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
  }
}
