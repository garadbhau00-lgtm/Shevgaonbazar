rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthOwner(uid) {
      return request.auth.uid == uid;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Ads can be read by anyone if approved.
    // Owners can read their own ads regardless of status.
    // Owners can create, update, and delete their own ads.
    // Admins can read, update, and delete any ad.
    match /ads/{adId} {
      allow read: if resource.data.status == 'approved' || isAuthOwner(resource.data.userId) || isAdmin();
      allow create: if isAuthOwner(request.resource.data.userId);
      allow update: if isAuthOwner(resource.data.userId) || isAdmin();
      allow delete: if isAuth-owner(resource.data.userId) || isAdmin();
    }

    // Users can read/update their own profile.
    // Admins can read/write/delete any user profile.
    // Any authenticated user can read public profile info (name, photo).
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if isAuthOwner(userId);
      allow update: if isAuthOwner(userId) || isAdmin();
      allow delete: if isAdmin();

      // Saved ads can only be managed by the user themselves.
      match /savedAds/{adId} {
        allow read, write, delete: if isAuthOwner(userId);
      }
    }
    
    // Conversations can be read or updated by participants.
    // Conversations can be created by a user if they are a participant.
    match /conversations/{conversationId} {
      allow read, update: if request.auth.uid in resource.data.participants;
      allow create: if request.auth.uid in request.resource.data.participants;
      
      // Messages can be read by conversation participants.
      // Messages can be created by a sender who is a participant.
      match /messages/{messageId} {
        allow read: if get(parent).data.participants.hasAny([request.auth.uid]);
        allow create: if request.resource.data.senderId == request.auth.uid && get(parent).data.participants.hasAny([request.auth.uid]);
      }
    }

    // Users can manage their own notifications.
    // Admins can read/delete any notification.
    match /notifications/{notificationId} {
        allow read, update, delete: if isAuthOwner(resource.data.userId);
        allow create: if isAdmin(); // Only admins can create broadcast notifications
        allow read, delete: if isAdmin();
    }
    
    // Any authenticated user can submit an issue.
    // Admins can read and update any issue.
    match /issues/{issueId} {
        allow create: if request.auth != null;
        allow read, update: if isAdmin() || isAuthOwner(resource.data.userId);
    }

    // Config can only be modified by Admins.
    // Any authenticated user can read the config (for advertisement).
    match /config/{configId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
