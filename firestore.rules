rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      match /savedAds/{adId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    match /ads/{adId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    match /conversations/{conversationId} {
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants && request.resource.data.participants.size() == 2 && get(/databases/$(database)/documents/ads/$(request.resource.data.adId)).data.userId in request.resource.data.participants;
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[0] == request.auth.uid || get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[1] == request.auth.uid;
      }
    }
    match /notifications/{notificationId} {
      allow read, write, delete: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.uid == request.resource.data.userId);
    }
    match /issues/{issueId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    match /config/{configId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
  }
}