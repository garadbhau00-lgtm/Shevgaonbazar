rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // USER PROFILES
    match /users/{userId} {
      // Allow reading any user profile (for names, etc.)
      allow read: if true;
      // Allow creating own user profile upon signup
      allow create: if request.auth != null;
      // Allow updating own user profile
      allow update: if request.auth != null && request.auth.uid == userId;
      // Admins can write to any user profile
      allow write: if isAdmin();
      // Admins can list all users for access management
      allow list: if isAdmin();
    }

    // ADS
    match /ads/{adId} {
      // Read is allowed if:
      // 1. Ad is approved (public)
      // 2. User is the owner of the ad
      // 3. User is an admin
      allow read: if resource.data.status == 'approved'
                   || (request.auth != null && resource.data.userId == request.auth.uid)
                   || isAdmin();

      // Allow creating ads if logged in
      allow create: if request.auth != null;

      // Allow updating/deleting own ad
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Admins have full write access
      allow write: if isAdmin();
    }

    // Rules for LISTING ads via queries
    match /ads/{document=**} {
        // This rule allows the main homepage query for approved ads,
        // the "My Ads" query for a user's own ads,
        // and the "Ad Management" query for admins to see pending ads.
        allow list: if (request.query.where.size() > 0 && request.query.where[0][2] == 'approved')
                    || (request.auth != null && request.query.where.size() > 0 && request.query.where[0][2] == request.auth.uid)
                    || (isAdmin() && request.query.where.size() > 0 && request.query.where[0][2] == 'pending');
    }

    // CONVERSATIONS & MESSAGES
    match /conversations/{conversationId} {
      // Allow read/write/create if user is a participant
      allow read, write, create: if request.auth != null && request.auth.uid in resource.data.participants;

      // Messages subcollection
      match /messages/{messageId} {
        // Allow read/write/create if user is a participant of the parent conversation
        allow read, write, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }
    
    // Allow users to list conversations they are part of
     match /conversations/{document=**} {
       allow list: if request.auth != null && request.query.where.size() > 0 && request.query.where[0][2] == request.auth.uid;
    }


    // CONFIGURATION (For QR Code, etc.)
    match /config/{configId} {
      // Allow anyone to read public config
      allow read: if true;
      // Only admins can write config
      allow write: if isAdmin();
    }
  }
}
