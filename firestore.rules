
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin.
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Users can only read and update their own profile.
    // Admins can read, update, and list any user profile.
    match /users/{userId} {
      allow read, update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId; // Allow user creation during signup
      allow list: if isAdmin();
    }

    // Ads can be read by anyone if they are 'approved'.
    // Users can read their own ads regardless of status.
    // Authenticated users can create ads.
    // Owners and admins can update/delete ads.
    // Admins can list ads for moderation.
    match /ads/{adId} {
      allow read: if resource.data.status == 'approved' || (request.auth != null && resource.data.userId == request.auth.uid);
      allow list: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();
    }

    // Payment configuration is readable by everyone but only writable by admins.
    match /config/payment {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Participants in a conversation can read/write messages and read the conversation document.
    // Authenticated users can create new conversations.
    match /conversations/{conversationId} {
      allow get, list: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }
  }
}
