
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read;
      allow write: if isOwner(userId) || isAdmin();
    }
    
    match /config/advertisement {
      allow read;
      allow write: if isAdmin();
    }

    match /ads/{adId} {
      allow read: if resource.data.status == 'approved' || isOwner(request.auth.uid) || isAdmin();
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    match /conversations/{conversationId} {
        allow read, create: if request.auth.uid in resource.data.participants;
        allow update: if request.auth.uid in resource.data.participants;

        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        }
    }
    
    match /notifications/{notificationId} {
        allow read, write, delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    match /issues/{issueId} {
      allow create;
      allow read, update, delete: if isOwner(resource.data.userId) || isAdmin();
    }

  }
}
